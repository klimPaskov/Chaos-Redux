l_english:

# Open Settings Button
chaosx.button.tt: "§YChaosX Settings§!"

# Settings Window
chaosx.settings.title: "§YChaos Redux Settings§!"

# Settings Menu Buttons
chaosx.settings.trigger_events: "Trigger Events"
chaosx.settings.trigger_events.tt: "Open the event triggering interface"

chaosx.settings.timer_system: "Timer System"
chaosx.settings.timer_system.tt: "Adjust event timer intervals and settings"

chaosx.settings.chaos_meter: "Chaos Meter"
chaosx.settings.chaos_meter.tt: "Configure chaos meter settings and tiers"

chaosx.settings.advanced_settings: "Advanced Settings"
chaosx.settings.advanced_settings.tt: "Modify advanced system parameters"

chaosx.settings.reset_settings: "Reset Settings"
chaosx.settings.reset_settings.tt: "Reset all settings to their default values"

chaosx.settings.toggle_scenarios: "Scenarios"
chaosx.settings.toggle_scenarios.tt: "Toggle scenario modes (Coming Soon)"

# Trigger Events Interface
chaosx.trigger_events.header: "§YEvents§!"
chaosx.trigger_events.event_id: "Event ID:"
chaosx.trigger_events.current_id: "[GetCurrentEventID]"
chaosx.trigger_events.decrease.tt: "§YDecrease Event ID by [GetIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetIncrementValue]\n §WRight Click:§! Change increment mode"
chaosx.trigger_events.increase.tt: "§YIncrease Event ID by [GetIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetIncrementValue]\n §WRight Click:§! Change increment mode"
chaosx.trigger_events.increment_mode: "[GetIncrementModeText]"
chaosx.trigger_events.increment_mode_display.tt: "§YCurrent Increment Mode: [GetIncrementModeText]§!\n\nUse click modifiers on the +/- buttons to change increment mode"
chaosx.trigger_events.event_name: "[GetSelectedEventName]"
chaosx.trigger_events.event_type: "Type:"
chaosx.trigger_events.selected_event_type: "[GetSelectedEventType]"
chaosx.trigger_events.trigger: "Trigger Event"
chaosx.trigger_events.trigger.tt: "Fire the selected event"
chaosx.trigger_events.random: "Random Event"
chaosx.trigger_events.random.tt: "Fire a random event"
chaosx.trigger_events.last_fired: "Last Fired Event:"
chaosx.trigger_events.last_fired_info: "[GetLastFiredEventInfo]"
chaosx.trigger_events.show_log: "Show Event Log"
chaosx.trigger_events.show_log.tt: "Display event firing log window"
chaosx.trigger_events.disable_system: "Disable Event System"
chaosx.trigger_events.disable_system.tt: "Disable automatic event firing for this country"

# Event Clusters Interface (placeholder)
chaosx.trigger_events.clusters_header: "§YEvent Clusters§!"
chaosx.trigger_events.clusters_placeholder: "Event Clusters functionality will be implemented in a future update.\n\nThis will allow you to trigger predefined groups of related events together."
chaosx.trigger_events.clusters_placeholder: "Event Clusters view\n\n(Future implementation)\n\nUse arrows to switch between Events and Event Clusters views."

settings.major.colored: "§RMajor§!"
settings.minor_repeatable.colored: "§GRepeatable§!"
settings.minor_fire_once.colored: "§YFire-Once§!"