l_english:

# Open Settings Button
chaosx.buttchaosx.trigger_events.force_trigger.tt: "§YEnable Force Trigger Mode§!\n\nWhen enabled, fire already-fired major/fire-once events and include them in random selection."
chaosx.trigger_events.disable_system: "Disable Event System"
chaosx.trigger_events.disable_system.tt: "Disable automatic event firing for this country"

chaosx.trigger_events.disable_selected_event: "Disable Selected Event"
chaosx.trigger_events.disable_selected_event.tt: "§YDisable Selected Event§!\n\nWhen checked, the selected event will never fire automatically. The event can still be triggered manually using the trigger buttons."

# Settings Window
chaosx.settings.title: "§YChaos Redux Settings§!"

# Settings Menu Buttons
chaosx.settings.trigger_events: "Trigger Events"
chaosx.settings.trigger_events.tt: "Open the event triggering interface"

chaosx.settings.timer_system: "Timer System"
chaosx.settings.timer_system.tt: "Adjust event timer intervals and manage tags"

chaosx.settings.chaos_meter: "Chaos Meter"
chaosx.settings.chaos_meter.tt: "Adjust chaos meter value"

chaosx.settings.advanced_settings: "Advanced Settings"
chaosx.settings.advanced_settings.tt: "Modify advanced system parameters"

chaosx.settings.reset_settings: "Reset All Settings"
chaosx.settings.reset_settings.tt: "Reset all settings to their default values"

chaosx.settings.toggle_scenarios: "Scenarios"
chaosx.settings.toggle_scenarios.tt: "Toggle scenario modes (Coming Soon)"

# Trigger Events Interface
chaosx.trigger_events.header: "§YEvents§!"
chaosx.trigger_events.filter_type: "[GetEventFilterType]"
chaosx.trigger_events.filter_prev.tt: "§YSwitch to Previous Filter Type§!\n\n§GClick to cycle through event type filters:§!\n §WAll Events§!\n §YFire-Once§!\n §GRepeatable§!\n §RMajor§!"
chaosx.trigger_events.filter_next.tt: "§YSwitch to Next Filter Type§!\n\n§GClick to cycle through event type filters:§!\n §WAll Events§!\n §RMajor§!\n §GRepeatable§!\n §YFire-Once§!"
chaosx.trigger_events.event_id: "Event ID:"
chaosx.trigger_events.current_id: "[GetCurrentEventID]"
chaosx.trigger_events.decrease.tt: "§YDecrease Event ID by [GetIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YOnly shows IDs from the current filter type: [GetEventFilterType]§!"
chaosx.trigger_events.increase.tt: "§YIncrease Event ID by [GetIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YOnly shows IDs from the current filter type: [GetEventFilterType]§!"
chaosx.trigger_events.increment_mode: "[GetIncrementModeText]"
chaosx.trigger_events.event_name: "[GetSelectedEventName]"
chaosx.trigger_events.event_type: "Type:"
chaosx.trigger_events.selected_event_type: "[GetSelectedEventType]"
chaosx.trigger_events.trigger: "Trigger Event"
chaosx.trigger_events.trigger.tt: "Fire the selected event"
chaosx.trigger_events.random: "Random Event"
chaosx.trigger_events.random.tt: "Fire a random event from the current filter type: [GetEventFilterType]"
chaosx.trigger_events.last_fired: "Last Fired Event:"
chaosx.trigger_events.last_fired_info: "[GetLastFiredEventInfo]"
# chaosx.trigger_events.show_log: "Show Event Log"
# chaosx.trigger_events.show_log.tt: "Display event firing log window"
chaosx.trigger_events.force_trigger: "Force Trigger Mode"
chaosx.trigger_events.force_trigger.tt: "Enable Force Trigger Mode - When enabled, fire already-fired major/fire-once events and include them in random selection."
chaosx.trigger_events.disable_system: "Disable Event System"
chaosx.trigger_events.disable_system.tt: "Disable automatic event firing for this country"

# Event Clusters Interface (placeholder)
chaosx.trigger_events.clusters_header: "§YEvent Clusters§!"
chaosx.trigger_events.clusters_placeholder: "Event Clusters view\n\n(Future implementation)\n\nUse arrows to switch between Events and Event Clusters views."

# Timer System Interface
chaosx.timer_system.interval_header: "§YTimer Interval§!"
chaosx.timer_system.tag_management_header: "§YTag Management§!"
chaosx.timer_system.min_label: "Min:"
chaosx.timer_system.max_label: "Max:"
chaosx.timer_system.min_value: "[GetTimerMinValue]"
chaosx.timer_system.max_value: "[GetTimerMaxValue]"
chaosx.timer_system.min_decrease.tt: "§YDecrease Min Timer by [GetTimerIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetTimerIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YMin value cannot go below 5 days§!"
chaosx.timer_system.min_increase.tt: "§YIncrease Min Timer by [GetTimerIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetTimerIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YMin cannot exceed Max value§!"
chaosx.timer_system.max_decrease.tt: "§YDecrease Max Timer by [GetTimerIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetTimerIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YMax value cannot go below min value§!"
chaosx.timer_system.max_increase.tt: "§YIncrease Max Timer by [GetTimerIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetTimerIncrementValue]\n §WRight Click:§! Change increment mode"
chaosx.timer_system.current_settings: "Current: [?timer_min_days] - [?timer_max_days] days"
chaosx.timer_system.note: "§YNOTE:§! Each country has their own timer system. Settings here are country scoped."
chaosx.timer_system.show_timer_window: "Show Timer Window"
chaosx.timer_system.show_timer_window.tt: "§YShow Timer Window§!\n\nDisplays a window showing days until next event. Default is hidden."
chaosx.timer_system.update_timer: "Update Timer"
chaosx.timer_system.update_timer.tt: "§YUpdate Timer Value§!\n\nRecalculates the timer value based on current min/max settings"
chaosx.timer_system.reset_defaults: "Restore Defaults"
chaosx.timer_system.reset_defaults.tt: "§YResets timer system settings to their default values§!"

# Tag Management Interface
chaosx.tag_management.enable_firing_label: "Enable firing for:"
chaosx.tag_management.current_filter: "[GetCurrentCountryFilter]"
chaosx.tag_management.filter_prev.tt: "Cycle to previous country filter mode"
chaosx.tag_management.filter_next.tt: "Cycle to next country filter mode"
chaosx.tag_management.current_sort: "[GetCurrentContinentSort]"
chaosx.tag_management.sort_prev.tt: "Cycle to previous continent sort mode"
chaosx.tag_management.sort_next.tt: "Cycle to next continent sort mode"
chaosx.tag_management.selected_tag: "§Y[GetSelectedTag]§!"
chaosx.tag_management.selected_tag_name: "[GetSelectedTagName]"
chaosx.tag_management.tag_decrease.tt: "§YDecrease Tag§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! Decrease by current increment mode\n §WRight Click:§! Change increment mode (1/5/10)\n\n§YNavigates through countries based on current filter and sort§!"
chaosx.tag_management.tag_increase.tt: "§YIncrease Tag§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! Increase by current increment mode\n §WRight Click:§! Change increment mode (1/5/10)\n\n§YNavigates through countries based on current filter and sort§!"
chaosx.tag_management.enable_for_selected: "Enable Selected"
chaosx.tag_management.enable_for_selected.tt: "§YEnable Event System§!\n\nEnables automatic event firing for the selected country"
chaosx.tag_management.disable_for_selected: "Disable Selected"
chaosx.tag_management.disable_for_selected.tt: "§YDisable Event System§!\n\nDisables automatic event firing for the selected country"
chaosx.tag_management.auto_enable_switch: "Auto-Enable on Tag Switch"
chaosx.tag_management.auto_enable_switch.tt: "§YAuto-Enable on Tag Switch§!\n\nWhen checked, automatically enables the event system when you switch to control a new country (takes a day)"
chaosx.tag_management.disable_previous: "Disable Previous Tag"
chaosx.tag_management.disable_previous.tt: "§YDisable Previous Tag§!\n\nWhen checked, automatically disables the event system for your previous country when switching to a new one (takes a day)"
chaosx.tag_management.currently_enabled: "Currently enabled for (§Y[?global.enabled_countries_count]§!):"
chaosx.tag_management.enabled_list: "[GetEnabledCountriesList]"
chaosx.tag_management.no_countries_enabled: "No countries enabled"
chaosx.tag_management.no_countries_found: "No country is selected!"
chaosx.tag_management.none_selected: "§YNone§!"

settings.major.colored: "§RMajor§!"
settings.minor_repeatable.colored: "§GRepeatable§!"
settings.minor_fire_once.colored: "§YFire-Once§!"
settings.all_events.colored: "§WAll Events§!"

# Country Filter Values
settings.country_filter.all: "§WAll§!"
settings.country_filter.enabled: "§GEnabled Only§!"
settings.country_filter.disabled: "§RDisabled Only§!"

# Continent Sort Values
settings.continent_sort.alphabetical: "§WAll Continents§!"
settings.continent_sort.europe: "§YEurope§!"
settings.continent_sort.asia: "§OAsia§!"
settings.continent_sort.africa: "§LAfrica§!"
settings.continent_sort.north_america: "§GNorth America§!"
settings.continent_sort.south_america: "§RSouth America§!"
settings.continent_sort.oceania: "§BOceania§!"
settings.continent_sort.middle_east: "§8Middle- East§!"

# Tag Management Filter Tooltips
chaosx.tag_management.filter_prev.tt: "Cycle to previous country filter mode"
chaosx.tag_management.filter_next.tt: "Cycle to next country filter mode"
chaosx.tag_management.sort_prev.tt: "Cycle to previous continent sort mode"
chaosx.tag_management.sort_next.tt: "Cycle to next continent sort mode"

# Debug/Log Keys
CHAOS_REDUX_SEPARATOR: "======================================================"
CHAOS_REDUX_SUBSECTION: "------------------------------------------------------"

# Timer Window
chaosx.timer_window.countdown: "days until next event: §Y[?event_timer_days]§!"
chaosx.timer_window.countdown.never: "days until next event: §YNever§!"

# Warning Message
chaosx.warning_text: "§YAutomatic event firing is disabled!§!"

# Chaos Meter Interface
chaosx.chaos_meter.header: "§YChaos Meter§!"
chaosx.chaos_meter.value_label: "Chaos Value:"
chaosx.chaos_meter.current_value: "[GetSettingsChaosValue]"
chaosx.chaos_meter.decrease.tt: "§YDecrease Chaos Value by [GetChaosIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetChaosIncrementValue]\n §WRight Click:§! Change increment mode (1/5/10)"
chaosx.chaos_meter.increase.tt: "§YIncrease Chaos Value by [GetChaosIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetChaosIncrementValue]\n §WRight Click:§! Change increment mode (1/5/10)"
chaosx.chaos_meter.tier_label: "Tier:"
chaosx.chaos_meter.current_tier: "[GetSettingsChaosTierName]"
chaosx.chaos_meter.tier_prev.tt: "§YSwitch to Previous Tier§!\n\n§GClick to cycle through chaos tiers:§!\n §WCalm World (0)§!\n §WWorld Collapse (1000+)§!\n §WCritical (800)§!\n §WChaos Tier (600)§!\n §WRising Chaos (400)§!\n §WGathering Storm (200)§!"
chaosx.chaos_meter.tier_next.tt: "§YSwitch to Next Tier§!\n\n§GClick to cycle through chaos tiers:§!\n §WCalm World (0)§!\n §WGathering Storm (200)§!\n §WRising Chaos (400)§!\n §WChaos Tier (600)§!\n §WCritical (800)§!\n §WWorld Collapse (1000+)§!"
chaosx.chaos_meter.preview_header: "Preview:"
chaosx.chaos_meter.update_button: "Update Chaos Meter"
chaosx.chaos_meter.update_button.tt: "Applies the current settings values to the actual chaos meter"
chaosx.chaos_meter.disable_checkbox: "Disable Chaos Meter"
chaosx.chaos_meter.disable_checkbox.tt: "When checked, the chaos meter mechanics will be disabled and it will stop updating"
chaosx.chaos_meter.actual_value: "[GetActualChaosValue]"
chaosx.chaos_meter.info_note: "§YNOTE:§! Chaos Meter is global"

# Advanced Settings Interface
chaosx.advanced_settings.header: "§YAdvanced Settings§!"
chaosx.advanced_settings.recovery_rate_label: "Recovery Rate:"
chaosx.advanced_settings.recovery_rate.decrease.tt: "§YDecrease Minor Event Recovery Rate by [GetAdvancedIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetAdvancedIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YControls how fast a minor repeatable event will recover from fired events§!"
chaosx.advanced_settings.recovery_rate.increase.tt: "§YIncrease Minor Event Recovery Rate by [GetAdvancedIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetAdvancedIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YControls how fast a minor repeatable event will recover from fired events§!"

chaosx.advanced_settings.cap_reduction_label: "Cap Reduction:"
chaosx.advanced_settings.cap_reduction_value: "[?global.settings_cap_reduction|.0%]"
chaosx.advanced_settings.cap_reduction.decrease.tt: "§YDecrease Cap Reduction Factor by [GetAdvancedIncrementValue]%§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetAdvancedIncrementValue]%\n §WRight Click:§! Change increment mode\n\n§YControls the percentage reduction applied to event weights after firing§!"
chaosx.advanced_settings.cap_reduction.increase.tt: "§YIncrease Cap Reduction Factor by [GetAdvancedIncrementValue]%§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetAdvancedIncrementValue]%\n §WRight Click:§! Change increment mode\n\n§YControls the percentage reduction applied to event weights after firing§!"

chaosx.advanced_settings.major_weight_label: "Major Event Weight:"
chaosx.advanced_settings.major_weight.decrease.tt: "§YDecrease Major Event Weight Per Minor by [GetAdvancedIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! -[GetAdvancedIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YControls how much weight per fired minor event is added to a major event§!"
chaosx.advanced_settings.major_weight.increase.tt: "§YIncrease Major Event Weight Per Minor by [GetAdvancedIncrementValue]§!\n\n§GClick Modifiers:§!\n §WLeft Click:§! +[GetAdvancedIncrementValue]\n §WRight Click:§! Change increment mode\n\n§YControls how much weight per fired minor event is added to a major event§!"

chaosx.advanced_settings.timer_modifier_label: "Timer Modifier:"
chaosx.advanced_settings.timer_modifier.decrease.tt: "§YDecrease Timer Modifier by 0.1§!\n\n§GControls the base timer multiplier for all chaos tiers§!\n\n§YLower values make events fire more frequently§!"
chaosx.advanced_settings.timer_modifier.increase.tt: "§YIncrease Timer Modifier by 0.1§!\n\n§GControls the base timer multiplier for all chaos tiers§!\n\n§YHigher values make events fire less frequently§!"

chaosx.advanced_settings.increment_mode_label: "Increment Mode:"
chaosx.advanced_settings.increment_mode.tt: "§YToggle Increment Mode§!\n\n§GCycles through adjustment amounts:§!\n §WFine tuning:§! ±1\n §WNormal adjustment:§! ±5\n §WFast adjustment:§! ±10"

chaosx.advanced_settings.update_button: "Apply Settings"
chaosx.advanced_settings.update.tt: "§YApply Advanced Settings§!\n\nApplies the current advanced settings values to the actual event system"

chaosx.advanced_settings.reset_button: "Reset to Defaults"
chaosx.advanced_settings.reset.tt: "§YReset Advanced Settings§!\n\nResets all advanced settings to their default values"

# Current Active Values Display
chaosx.advanced_settings.current_values_header: "§YCurrent Active Values§!"
chaosx.advanced_settings.current_recovery_rate: "Recovery Rate: §Y[GetActiveRecoveryRateValue]§!"
chaosx.advanced_settings.current_cap_reduction: "Cap Reduction: §Y[?global.reduce_cap_factor|.0%]§!"
chaosx.advanced_settings.current_major_weight: "Major Weight: §Y[GetActiveMajorWeightValue]§!"