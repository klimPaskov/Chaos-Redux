scripted_gui = {
    chaosx_settings_gui = {
        window_name = "chaosx_settings_window"
        context_type = player_context
        parent_window_token = top_bar

        visible = {
            has_country_flag = chaosx_settings_open
        }

        effects = {
            # Close button click - closes settings window
            close_button_click = {
                close_chaosx_settings = yes
            }

            # Menu button clicks (currently empty effects)
            trigger_events_button_click = {
                open_trigger_events_menu = yes
            }

            timer_system_button_click = {
                open_timer_system_menu = yes
            }

            chaos_meter_button_click = {
                open_chaos_meter_menu = yes
            }

            advanced_settings_button_click = {
                open_advanced_settings_menu = yes
            }

            reset_settings_button_click = {
                reset_all_settings = yes
            }

            toggle_scenarios_button_click = {
                toggle_scenarios_menu = yes
            }

            # Trigger Events Interface Effects
            events_header_left_arrow_click = {
                toggle_events_view = yes
            }

            events_header_right_arrow_click = {
                toggle_events_view = yes
            }

            event_filter_left_arrow_click = {
                cycle_event_filter_prev = yes
            }

            event_filter_right_arrow_click = {
                cycle_event_filter_next = yes
            }

            event_id_decrease_click = {
                decrease_event_id = yes
            }

            event_id_decrease_right_click = {
                toggle_increment_mode = yes
            }

            event_id_increase_click = {
                increase_event_id = yes
            }

            event_id_increase_right_click = {
                toggle_increment_mode = yes
            }

            trigger_event_button_click = {
                trigger_selected_event = yes
            }

            trigger_event_button_right_click = {
                force_trigger_selected_event = yes
            }

            trigger_random_event_button_click = {
                trigger_random_event = yes
            }

            trigger_random_event_button_right_click = {
                # Force mode - includes fired events
                set_variable = { temp_force_mode = 1 }
                trigger_random_event = yes
                clear_variable = temp_force_mode
            }

            # show_events_log_checkbox_click = {
            #     toggle_events_log = yes
            # }

            force_trigger_button_click = {
                toggle_force_trigger_mode = yes
            }

            disable_event_system_button_click = {
                toggle_event_system = yes
            }

            # Timer System Interface Effects
            timer_min_decrease_click = {
                decrease_timer_min = yes
            }

            timer_min_decrease_right_click = {
                toggle_timer_increment_mode = yes
            }

            timer_min_increase_click = {
                increase_timer_min = yes
            }

            timer_min_increase_right_click = {
                toggle_timer_increment_mode = yes
            }

            timer_max_decrease_click = {
                decrease_timer_max = yes
            }

            timer_max_decrease_right_click = {
                toggle_timer_increment_mode = yes
            }

            timer_max_increase_click = {
                increase_timer_max = yes
            }

            timer_max_increase_right_click = {
                toggle_timer_increment_mode = yes
            }

            timer_window_checkbox_click = {
                toggle_timer_window = yes
            }

            timer_reset_defaults_button_click = {
                reset_timer_to_defaults = yes
            }

            timer_update_button_click = {
                update_timer_from_settings = yes
            }

            # Event Clusters Interface Effects
            clusters_header_left_arrow_click = {
                toggle_events_view = yes
            }

            clusters_header_right_arrow_click = {
                toggle_events_view = yes
            }
        }

        triggers = {
            # All menu buttons are always enabled
            trigger_events_button_click_enabled = {
                always = yes
            }

            timer_system_button_click_enabled = {
                has_country_flag = events_activated
            }

            chaos_meter_button_click_enabled = {
                always = yes
            }

            advanced_settings_button_click_enabled = {
                always = yes
            }

            reset_settings_button_click_enabled = {
                always = yes
            }

            toggle_scenarios_button_click_enabled = {
                always = yes
            }

            close_button_click_enabled = {
                always = yes
            }

            # Trigger Events Interface Triggers
            events_header_left_arrow_click_enabled = {
                has_country_flag = show_trigger_events_menu
            }

            events_header_right_arrow_click_enabled = {
                has_country_flag = show_trigger_events_menu
            }

            event_filter_left_arrow_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_filter_right_arrow_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_decrease_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_decrease_right_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_increase_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_increase_right_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            trigger_event_button_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
                NOT = { check_variable = { var = settings_selected_event_id value = 0 compare = equals } }
                OR = {
                    has_country_flag = force_trigger_mode_enabled  # Force mode enabled - always allow
                    AND = {
                        # Normal mode - only allow if event hasn't been fired (for major/fire-once events)
                        NOT = { has_country_flag = force_trigger_mode_enabled }
                        OR = {
                            # Repeatable events are always available
                            check_variable = { settings_event_type = 2 }
                            # Major/fire-once events that haven't been fired yet
                            AND = {
                                OR = {
                                    check_variable = { settings_event_type = 1 }  # Major
                                    check_variable = { settings_event_type = 3 }  # Fire-once
                                }
                                NOT = { is_in_array = { global.fired_events = settings_selected_event_id } }
                            }
                        }
                    }
                }
            }

            trigger_event_button_right_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
                NOT = { check_variable = { var = settings_selected_event_id value = 0 compare = equals } }
            }

            trigger_random_event_button_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
                OR = {
                    has_country_flag = force_trigger_mode_enabled  # Force mode enabled - always allow
                    AND = {
                        # Normal mode - only allow if there are events available to fire
                        NOT = { has_country_flag = force_trigger_mode_enabled }
                        OR = {
                            # All events filter - always has repeatable events available
                            check_variable = { settings_event_id_filter = 0 }
                            # Repeatable events filter - always available
                            check_variable = { settings_event_id_filter = 2 }
                            # Major events filter - check if any major events haven't been fired
                            AND = {
                                check_variable = { settings_event_id_filter = 1 }
                                check_variable = { var = global.unfired_major_events_count value = 0 compare = greater_than }
                            }
                            # Fire-once events filter - check if any fire-once events haven't been fired
                            AND = {
                                check_variable = { settings_event_id_filter = 3 }
                                check_variable = { var = global.unfired_fire_once_events_count value = 0 compare = greater_than }
                            }
                        }
                    }
                }
            }

            trigger_random_event_button_right_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            # show_events_log_checkbox_click_enabled = {
            #     has_country_flag = show_trigger_events_menu
            #     has_country_flag = show_events_view
            # }

            force_trigger_button_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            disable_event_system_button_click_enabled = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            # Timer System Interface Triggers
            timer_min_decrease_click_enabled = {
                has_country_flag = show_timer_system_menu
                NOT = { check_variable = { settings_timer_min_days = 5 } }
            }

            timer_min_decrease_right_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_increase_click_enabled = {
                has_country_flag = show_timer_system_menu
                NOT = { check_variable = { settings_timer_min_days = 125 } }
                NOT = { check_variable = { settings_timer_min_days = settings_timer_max_days } }
            }

            timer_min_increase_right_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_decrease_click_enabled = {
                has_country_flag = show_timer_system_menu
                NOT = { check_variable = { settings_timer_max_days = settings_timer_min_days } }
            }

            timer_max_decrease_right_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_increase_click_enabled = {
                has_country_flag = show_timer_system_menu
                NOT = { check_variable = { settings_timer_max_days = 125 } }
            }

            timer_max_increase_right_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_window_checkbox_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_reset_defaults_button_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            timer_update_button_click_enabled = {
                has_country_flag = show_timer_system_menu
            }

            # Visibility triggers for trigger events content
            trigger_events_content_visible = {
                has_country_flag = show_trigger_events_menu
            }

            # Individual element visibility (only show when in Events view)
            events_header_left_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            events_header_right_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            events_header_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_filter_left_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_filter_right_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_filter_label_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_label_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_decrease_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_increase_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_value_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }
            event_id_bg_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_id_increment_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            event_name_display_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            selected_event_type_display_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }
            event_type_display_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            trigger_event_button_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            trigger_event_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            trigger_random_event_button_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            trigger_random_event_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            last_fired_header_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            last_fired_info_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            # show_events_log_checkbox_visible = {
            #     has_country_flag = show_trigger_events_menu
            #     has_country_flag = show_events_view
            # }

            # show_events_log_text_visible = {
            #     has_country_flag = show_trigger_events_menu
            #     has_country_flag = show_events_view
            # }

            force_trigger_button_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            force_trigger_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            disable_event_system_button_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            disable_event_system_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_events_view
            }

            # Event Clusters visibility
            event_clusters_content_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_event_clusters_view
            }

            clusters_header_left_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_event_clusters_view
            }

            clusters_header_right_arrow_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_event_clusters_view
            }

            clusters_header_text_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_event_clusters_view
            }

            clusters_placeholder_visible = {
                has_country_flag = show_trigger_events_menu
                has_country_flag = show_event_clusters_view
            }

            # Timer System Content Visibility
            timer_system_content_visible = {
                has_country_flag = show_timer_system_menu
            }

            # Timer System Individual Element Visibility
            timer_interval_header_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_label_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_decrease_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_bg_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_value_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_min_increase_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_label_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_decrease_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_bg_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_value_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_max_increase_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_current_settings_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_decrement_info_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_window_checkbox_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_window_text_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_reset_defaults_button_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_reset_defaults_text_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_update_button_visible = {
                has_country_flag = show_timer_system_menu
            }

            timer_update_text_visible = {
                has_country_flag = show_timer_system_menu
            }
        }

        properties = {
            # Dynamic sprite properties for increment/decrement buttons based on increment mode
            event_id_decrease = {
                image = "[GetDecrementSprite]"
            }

            event_id_increase = {
                image = "[GetIncrementSprite]"
            }

            # Dynamic sprite for the force trigger button
            force_trigger_button = {
                image = "[GetForceTriggerButtonSprite]"
            }

            # Dynamic sprite for the event system toggle button
            disable_event_system_button = {
                image = "[GetEventSystemButtonSprite]"
            }

            # Dynamic sprites for timer system increment/decrement buttons
            timer_min_decrease = {
                image = "[GetTimerDecrementSprite]"
            }

            timer_min_increase = {
                image = "[GetTimerIncrementSprite]"
            }

            timer_max_decrease = {
                image = "[GetTimerDecrementSprite]"
            }

            timer_max_increase = {
                image = "[GetTimerIncrementSprite]"
            }

            # Dynamic sprite for timer window checkbox
            timer_window_checkbox = {
                image = "[GetTimerWindowCheckboxSprite]"
            }
        }

        ai_enabled = {
            always = no
        }
    }

    # Separate GUI for the settings button
    chaosx_settings_button_gui = {
        window_name = "chaosx_container"
        context_type = player_context
        parent_window_token = top_bar

        visible = {
            has_global_flag = event_system_initialized
        }

        effects = {
            # Settings button click - opens settings window
            chaosx_button_click = {
                open_chaosx_settings = yes
            }
        }

        triggers = {
            chaosx_button_click_enabled = {
                always = yes
            }
        }

        ai_enabled = {
            always = no
        }
    }

    # Timer Window GUI
    chaosx_timer_window_gui = {
        window_name = "chaosx_timer_window"
        context_type = player_context
        parent_window_token = top_bar

        visible = {
            has_country_flag = timer_window_enabled
        }
        ai_enabled = {
            always = no
        }
    }
}